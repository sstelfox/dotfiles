#!/bin/bash

# This file replaces various dotfiles in the user's home directory it makes
# some assumptions about what's installed such as vim, bash, git,
# bash-completion, and tmux.
#
# The original files are stored in $HOME/.dotfiles/system-originals/ if they
# existed for reference. This folder is not included in the repository and as
# such will not migrate between machines
FILES=(bashrc bash_profile condarc config/aichat config/ra-multiplex config/systemd config/nvim config/starship.toml config/nvim ctags fonts gemrc gitconfig gnupg pryrb sqliterc ssh tmux.conf toprc vimrc)

DOTFILE_DIR="${HOME}/.dotfiles"

# This function takes a filename (without the preceding .) and backs it up
# before installing a symbolic link to the repository version
function backup_and_install {
	echo "Installing $1..."

	if [ -e "$HOME/.$1" ]; then
		# If it's a link just delete it
		if [ -h "$HOME/.$1" ]; then
			rm -f $HOME/.$1
		elif [ -d "$HOME/.$1" -o -f "$HOME/.$1" ]; then
			mv $HOME/.$1 $DOTFILE_DIR/system-originals/$(basename $1)
		else
			echo "\tFound inode type this installer isn't aware of. Skipping install"
			return 1
		fi
	fi

	PARENT_DIR="$(dirname $HOME/.$1)"
	if [ ! -d "${PARENT_DIR}" ]; then
		mkdir -p "${PARENT_DIR}"
	fi

	ln -s $HOME/.dotfiles/$(basename $1) $HOME/.$1
}

for DOTFILE in ${FILES[@]}; do
	backup_and_install $DOTFILE
done

# If neovim is available, try and start it up so it will synchronize and setup any plugins
if which nvim &>/dev/null; then
	nvim --headless -c 'quitall'
fi

# Generate our SSH config
${DOTFILE_DIR}/ssh/build_config.sh

chmod -R u=rwX,g=,o= ${DOTFILE_DIR}
chmod -R u=rwX,g=,o= ${DOTFILE_DIR}/gnupg

if which fc-cache &>/dev/null; then
	echo "Installing fonts and updating font cache..."
	fc-cache &>/dev/null
fi

# Switch to the authenticated access for my dotfiles, I most likely cloned over
# the public HTTPS endpoint to get these here. Leave a noauth version in case I
# want to update without creds available...
(
	cd ~/.dotfiles/
	git remote set-url origin git@github.com:sstelfox/dotfiles.git
)
(
	cd ~/.dotfiles/
	git remote | grep -q noauth || git remote add noauth https://github.com/sstelfox/dotfiles.git
)

# Mark the git file as untracked locally so we can make changes without
# affecting what's in the repo
(
	cd ~/.dotfiles
	git update-index --assume-unchanged system-specific/git-user-info.sh
)

echo "Done."
