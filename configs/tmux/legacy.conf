# Make tmux use C-a, similar to screen
set -g prefix C-a

# Command sequence for nested tmux sessions:
bind a send-prefix

# Fast switch to last active window
bind C-a last-window

# Switch pane splitting to more logical and easier to press keys
unbind %
bind \\ split-window -h
bind - split-window -v

# Bindings from stackoverflow to change orientation / rotation of panes, this
# works but I don't know if I like the keybindings.
bind f move-pane -t '.-'
bind g move-pane -h -t '.-'

# Add vim style movement bindings to panes
set-window-option -g mode-keys vi
bind-key k select-pane -U
bind-key j select-pane -D
bind-key h select-pane -L
bind-key l select-pane -R

# Try and fix the weird copy / paste behavior. This is setup to also handle
# copy / paste in mouse mode though I leave that off. I can turn it on on
# demand.
set-option -s set-clipboard off
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel 'xclip -se c -i'
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel 'xclip -se c -i'

# Attempt to rate-limit fast-scrolling output to prevent terminal lockups
#setw -g c0-change-interval 50
#setw -g c0-change-trigger  75

# Agressively resize windows based on which clients are actually viewing a
# session
setw -g aggressive-resize on

# Allow mouse scrolling from with a tmux buffer, if using with PuTTY you need
# to enable xterm style mouse reporting by unchecking 'Disable xterm-style
# mouse reporting' in Terminal -> Features
#setw -g mouse on

# No... Console mouse support is just awful
setw -g mouse off

# Start window numbering at 1, 0 indexing is great but zero is at the other end
# of the keybaord
set -g base-index 1

# Faster command sequences - prevents waiting for escape characters
#set -s escape-time 0

# Highlight status bar on activity
set -g visual-activity on

# Might not like these... Change foreground/background for current window
set -g monitor-activity on

# Set a large history buffer
set -g history-limit 100000

# Status line theme
set -g status-bg black
set -g status-fg green

# How often to update the status bar (in seconds)
set -g status-interval 30

# Widht of the information on the left
set -g status-left-length 40

# What appears in the status bar, can effectively be the output of any shell
# command... Oh the possibilities 
set -g status-left '#[fg=green](#S) #h '
set -g status-right '#[fg=yellow]#(cut -d " " -f 1-3 /proc/loadavg)#[default] #[fg=cyan]%H:%M#[default]'

# YEAH smexy colors
#set -g default-terminal "screen-256color"

set -s escape-time 0

# Requested by LazyVim / neovim
set-option -g focus-events on
set-option -sa terminal-overrides ',xterm*:RGB'
