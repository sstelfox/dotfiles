
# When a command was run that spanned multiple lines, merge that into a single
# history entry for the purposes of looking back.
shopt -s cmdhist

# Ensure we append to the history file rather than replacing it
shopt -s histappend

# Enable globstar matching
shopt -s globstar

# Disable the XON/XOFF flow control completely (Ctrl-Q/Ctrl-S). Damn this is an
# annoying legacy feature...
if [ -t 0 ]; then
  stty -ixon
fi

# Fuck this command auto search bull shit
unset command_not_found_handle
unset LESSOPEN
unset SSH_ASKPASS

export DOTFILES_DIR="$HOME/.dotfiles"
export EDITOR="vim"

# NetworkManager is absolute trash and doesn't allow you to set these, so we
# have to fallback on env variables
export RES_OPTIONS="edns0 trust-ad"

# If we're running interactively (such as through rsync, sftp etc) don't
# execute the rest of the setup code.
if [[ $- != *i* ]]; then
  return
fi

# Source all executable files that live the system-specific folder
#for FILE in $HOME/.dotfiles/system-specific/*.sh; do
#  if [ -x "$FILE" ]; then
#    source $FILE
#  fi
#done

alias dig='dig +nocmd +noall +answer'
alias gdb='gdb -q'

if [ -d /opt/cuda/bin ]; then
  export PATH="${PATH}:/opt/cuda/bin"
fi

# You know what I really need? An archive of every bash command I ever run...
if [ ! -f "${HOME}/.dotfiles/bash-histories/.archive_created" ]; then
  mkdir -p "${HOME}/.dotfiles/bash-histories"
  touch "${HOME}/.dotfiles/bash-histories/.archive_created"
fi

export HISTCONTROL="ignoreboth"
export HISTIGNORE="ls:bg:fg:history"
export HISTSIZE=-1
export HISTTIMEFORMAT="%F %T "

# Some color definitions
#GREEN=$(tput setaf 2)
#RED=$(tput setaf 1)
#BLUE=$(tput setaf 5)
#RST=$(tput sgr0)

#source $HOME/.dotfiles/helpers/gpg-agent.sh
#source $HOME/.dotfiles/helpers/sagent.sh

#if which -q starship &>/dev/null; then
#  eval "$(starship init bash)"
#else
#  setup_prompt
#fi

if [[ -f "$HOME/.rvm/scripts/rvm" ]]; then
  source $HOME/.rvm/scripts/rvm
  # Add RVM to PATH for scripting. Make sure this is the last PATH variable change.
  export PATH="$PATH:$HOME/.rvm/bin"
fi

# Docker compatibility shim
if which podman &>/dev/null; then
  systemctl --user start podman.socket
  export DOCKER_HOST=http+unix:///run/user/$(id -u)/podman/podman.sock
  alias docker=podman

  # Also set a custom registry config for podman to use the docker hub by default as the interactive prompt isn't available outside of the podman ecosystem.
  if [ ! -f ~/.config/containers/registries.conf ]; then
    mkdir -p ~/.config/containers
    cat <<'EOF' >~/.config/containers/registries.conf
short-name-mode="disabled"
EOF
  fi
fi

if which -q sccache &>/dev/null; then
  # Use `cargo install sccache` to speed up compilation
  export RUSTC_WRAPPER=sccache
fi

# This is a bugfix for wayload that doesn't allow clipboard interactions for some reason
export QT_QPA_PLATFORM=xcb

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/home/sstelfox/.miniconda3/bin/conda' 'shell.bash' 'hook' 2>/dev/null)"
if [ $? -eq 0 ]; then
  eval "$__conda_setup"
else
  if [ -f "${HOME}/.miniconda3/etc/profile.d/conda.sh" ]; then
    . "${HOME}/.miniconda3/etc/profile.d/conda.sh"
  else
    export PATH="${HOME}/.miniconda3/bin:$PATH"
  fi
fi
unset __conda_setup
# <<< conda initialize <<<

# Only handle this setup when I've installed the conda environment
if which conda &>/dev/null; then
  conda activate default
fi

export OLLAMA_HOST="172.16.50.3:11434"
#export PAISA_CONFIG="${HOME}/documentation/data/finances/paisa.yaml"
