#!/usr/bin/env bash

set -o errexit
set -o pipefail

NIX_OS_VERSION="2.26.1"

CONTAINER_BUILD_ROOT="${HOME}/.dotfiles/containers"
CONTAINER_FILE="${CONTAINER_BUILD_ROOT}/Containerfile-vnix"
CONTAINER_TAG="stelfox.net/containers/vnix:${NIX_OS_VERSION}"

EXTRA_CONTENT_FILES="${CONTAINER_BUILD_ROOT}/vnix/nix.conf"

NIX_CACHE="${HOME}/.cache/vnix"

WORKING_DIR="$(pwd)"

build_container() {
  container_hash="$(cat "${CONTAINER_FILE}" "${EXTRA_CONTENT_FILES}" | sha256sum | cut -d' ' -f1)"
  hash_file="${NIX_CACHE}/container.hash"

  if [ -f "${hash_file}" ] && [ "$(cat "${hash_file}")" == "${container_hash}" ]; then
    if podman image exists "${CONTAINER_TAG}"; then
      return 0
    fi
  fi

  podman build --build-arg NIX_OS_VERSION=${NIX_OS_VERSION} \
    -t "${CONTAINER_TAG}" -f "${CONTAINER_FILE}" "${CONTAINER_BUILD_ROOT}"

  mkdir -p "${NIX_CACHE}"
  echo -n "${container_hash}" >"${hash_file}"
}

check_dependencies() {
  if ! command -v podman >/dev/null 2>&1; then
    echo "error: must have podman installed" >&2
    return 1
  fi

  return 0
}

initialize_nix_cache() {
  if [ ! -d "${NIX_CACHE}/store" ]; then
    mkdir -p "${NIX_CACHE}"

    podman create --name vnix-init nixos/nix:${NIX_OS_VERSION}
    podman export vnix-init | tar -xf - --strip-components=1 -C "${NIX_CACHE}" nix
    podman rm vnix-init
  fi

  return 0
}

check_dependencies

build_container
initialize_nix_cache

# Try and allow an ssh agent setup into the environment if its available
ssh_agent_socket_mount_args=""
if [ -n "${SSH_AUTH_SOCK}" ]; then
  container_socket="/run/user/10001/ssh-agent.sock"
  ssh_agent_socket_mount_args="--volume ${SSH_AUTH_SOCK}:${container_socket}"
fi

# We're rootless so need to map initial intermediate ID to the user but maybe this needs to be root?
# --uidmap 0:10001:1 --gidmap 0:10001:1 \

#  --uidmap 0:1:10001 --uidmap 10001:0:1 \
#  --gidmap 0:1:10001 --gidmap 10001:0:1 \
#  --userns=keep-id \
exec podman run -it --rm \
  --uidmap 0:1:0 --uidmap 0:0:1 \
  --gidmap 0:1:0 --gidmap 0:0:1 \
  --volume "${NIX_CACHE}":/nix:z --volume "${WORKING_DIR}:/workspace" \
  ${ssh_agent_socket_mount_args} "${CONTAINER_TAG}" $@
